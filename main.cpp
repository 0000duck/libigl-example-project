#include <igl/viewer/Viewer.h>

int main(int argc, char *argv[])
{
  // Inline mesh of a torus
  const Eigen::MatrixXd V= (Eigen::MatrixXd(24,3)<<
    -2.000000,0.000000,0.000000,
    -3.000000,0.000000,-1.000000,
    -4.000000,0.000000,-0.000001,
    -3.000000,0.000000,1.000000,
    -1.000000,-1.732050,0.000000,
    -1.500000,-2.598080,-1.000000,
    -2.000000,-3.464100,-0.000001,
    -1.500000,-2.598080,1.000000,
    1.000000,-1.732050,0.000000,
    1.500000,-2.598080,-1.000000,
    2.000000,-3.464100,-0.000001,
    1.500000,-2.598080,1.000000,
    2.000000,0.000000,0.000000,
    3.000000,0.000000,-1.000000,
    4.000000,0.000000,-0.000001,
    3.000000,0.000000,1.000000,
    1.000000,1.732050,0.000000,
    1.500000,2.598080,-1.000000,
    2.000000,3.464100,-0.000001,
    1.500000,2.598080,1.000000,
    -1.000000,1.732050,0.000000,
    -1.500000,2.598080,-1.000000,
    -2.000000,3.464100,-0.000001,
    -1.500000,2.598080,1.000000).finished();
  const Eigen::MatrixXi F = (Eigen::MatrixXi(48,3)<<
    2,1,6,
    5,6,1,
    3,2,7,
    6,7,2,
    4,3,8,
    7,8,3,
    1,4,5,
    8,5,4,
    6,5,10,
    9,10,5,
    7,6,11,
    10,11,6,
    8,7,12,
    11,12,7,
    5,8,9,
    12,9,8,
    10,9,14,
    13,14,9,
    11,10,15,
    14,15,10,
    12,11,16,
    15,16,11,
    9,12,13,
    16,13,12,
    14,13,18,
    17,18,13,
    15,14,19,
    18,19,14,
    16,15,20,
    19,20,15,
    13,16,17,
    20,17,16,
    18,17,22,
    21,22,17,
    19,18,23,
    22,23,18,
    20,19,24,
    23,24,19,
    17,20,21,
    24,21,20,
    22,21,2,
    1,2,21,
    23,22,3,
    2,3,22,
    24,23,4,
    3,4,23,
    21,24,1,
    4,1,24).finished().array()-1;

  // Plot the mesh
  igl::viewer::Viewer viewer;
  viewer.data.set_mesh(V, F);
  viewer.data.set_face_based(true);
  viewer.launch();
}
